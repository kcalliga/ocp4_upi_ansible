---
- name: Install Bind
  yum:
    name: bind
    state: latest
  become: yes
  become_user: root
  become_method: sudo

- name: Install Python-DNS
  yum:
    name: python-dns
    state: latest
  become: yes
  become_user: root
  become_method: sudo


- name: Setup Default named.conf file
  template:
    src: templates/named.conf.j2
    dest: /etc/named.conf
    group: named
  become: yes
  become_user: root
  become_method: sudo

- name: Add Forward Zones to named.conf file
  blockinfile:
    path: /etc/named.conf
    marker: "#<!-- {mark} BEGIN ANSIBLE MANAGED FORWARD DNS ZONES -->"
    insertafter: "# lastzone"
    block: |
           zone "{{ item }}" {
                type master;
                file "{{ item }}.db";
                allow-update { localhost; };
           }; 
  with_items: 
    - "{{ forward_dns_zone }}"
  become: yes
  become_user: root
  become_method: sudo

- name: Add Reverse Zones to named.conf file
  blockinfile:
    path: /etc/named.conf
    marker: "#<!-- {mark} BEGIN ANSIBLE MANAGED REVERSE ZONES -->"
    insertafter: "#<!-- END BEGIN ANSIBLE MANAGED FORWARD DNS ZONES -->"
    block: |
           zone "{{ item }}" {
                type master;
                file "{{ item }}.db";
                allow-update { localhost; };
           };
  with_items:
    - "{{ reverse_dns_zone }}"
  become: yes
  become_user: root
  become_method: sudo

- name: Create Forward Zone Files
  template:
    src: templates/forward.zone.file.j2
    dest: /var/named/{{ item }}.db
    group: named
  with_items:
    - "{{ forward_dns_zone }}"
    - "{{ cluster_basedomain }}"
  become: yes
  become_user: root
  become_method: sudo

- name: Create Reverse Zone Files
  template:
    src: templates/reverse.zone.file.j2
    dest: /var/named/{{ item }}.db
    group: named
  with_items:
    - "{{ reverse_dns_zone }}"
  become: yes
  become_user: root
  become_method: sudo

- name: Make sure Named Is Started and Enabled
  systemd:
    state: started
    name: named
    enabled: yes
  become: yes
  become_user: root
  become_method: sudo

- name: Enabling Port 53/TCP on Public Zone
  firewalld:
    port: 53/tcp
    permanent: yes
    zone: public
    immediate: yes
    state: enabled

- name: Enabling Port 53/TCP on Internal Zone
  firewalld:
    port: 53/tcp
    permanent: yes
    zone: internal
    state: enabled
    immediate: yes

- name: Enabling Port 53/UDP on Public Zone
  firewalld:
    port: 53/udp
    permanent: yes
    zone: public
    immediate: yes
    state: enabled

- name: Enabling Port 53/UDP on Internal Zone
  firewalld:
    port: 53/udp
    permanent: yes
    zone: internal
    state: enabled
    immediate: yes

- name: Add A Records for All Servers
  nsupdate:
    server: "localhost"
    zone: "{{ forward_dns_zone }}"
    record: "{{ hostvars[item]['short_name'] }}"
    value: "{{ hostvars[item]['ip_address'] }}"
  with_items: 
    - "{{ groups['masters'] }}"
    - "{{ groups['workers'] }}"
    - "{{ groups['support'] }}"
    - "{{ groups['bootstrap'] }}"

- name: Add A Record for HAPROXY
  nsupdate:
    server: "localhost"
    zone: "{{ forward_dns_zone }}"
    record: "haproxy"
    value: "{{ support_server_ip }}"

- name: Add A Record for API-INT
  nsupdate:
    server: "localhost"
    zone: "{{ forward_dns_zone }}"
    record: "api-int"
    value: "{{ support_server_ip }}"

- name: Add A Record for API
  nsupdate:
    server: "localhost"
    zone: "{{ forward_dns_zone }}"
    record: "api"
    value: "{{ support_server_ip }}"

- name: Add A Record for Docker Registry
  nsupdate:
    server: "localhost"
    zone: "{{ forward_dns_zone }}"
    record: "docker-registry"
    value: "{{ support_server_ip }}"
    state: present

- name: Add App Wildcard
  nsupdate:
    server: "localhost"
    zone: "{{ forward_dns_zone }}"
    record: "*.apps"
    value: "{{ support_server_ip }}"
    state: present

- name: Add CNAME for ETCD-0 Pointing to Master1
  nsupdate:
    server: "localhost"
    zone: "{{ forward_dns_zone }}"
    type: "CNAME"
    record: "etcd-0"
    value: "{{ hostvars[item]['inventory_hostname'] }}."
    state: present
  with_items:
    - "{{ groups['masters'][0] }}"

- name: Add CNAME for ETCD-1 Pointing to Master2
  nsupdate:
    server: "localhost"
    zone: "{{ forward_dns_zone }}"
    type: CNAME
    record: "etcd-1"
    value: "{{ hostvars[item]['inventory_hostname'] }}."
    state: present
  with_items:
    - "{{ groups['masters'][1] }}"

- name: Add CNAME for ETCD-2 Pointing to Master3
  nsupdate:
    server: "localhost"
    zone: "{{ forward_dns_zone }}"
    type: CNAME 
    record: "etcd-2"
    value: "{{ hostvars[item]['inventory_hostname'] }}."
    state: present
  with_items:
    - "{{ groups['masters'][2] }}"

- name: Add SRV Records for ETCD
  nsupdate:
    server: "localhost"
    zone: "{{ forward_dns_zone }}"
    type: SRV
    record: "_etcd-server-ssl._tcp.{{ forward_dns_zone }}."
    value: ["0 10 2380 etcd-0.{{ forward_dns_zone }}.", "0 10 2380 etcd-1.{{ forward_dns_zone }}.", "0 10 2380 etcd-2.{{ forward_dns_zone }}."]
    state: present
